# set prefix to C-Space (which is Caps-Space for me). Consider Ctrl space?
# Formerly was M-Space (which is Escape-Space, which for me is Caps-Space)
unbind C-b
set -g prefix C-Space

# allows use of the prefix in the underlying proram when pressed twice
bind-key C-Space send-prefix

# reduce vim mode switching delay
# (can't set to 0 so long as I am using escape-space as default binding)
set -g escape-time 0

# easy reload .tmux.conf file
bind r source-file ~/.tmux.conf \; display-message ".tmux.conf reloaded"

# N: New session
bind N command-prompt "new-session -s '%%'"

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# automatiac tmux restore is kinda buggy--e.g. annoying to actually delete tmux session and exit tmux
# set -g @continuum-restore 'on'

# Run <prefix> + I to install plugins
run '~/.tmux/plugins/tpm/tpm'

# allow osx copy/paste (uses system clipboard)
set -g default-command "reattach-to-user-namespace -l $SHELL"

# Fix colors
set -g default-terminal "screen-256color"

# Smart pane switching with awareness of Vim splits. (e.g. ctrl-j to move left to vim split)
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l
